name: Test

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ['3.9', '3.10', '3.11']

        steps:
            - uses: actions/checkout@v2

            - name: Cache poetry
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.cache/pypoetry
                      ~/.cache/pip
                  key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install Poetry
              run: |
                  python -m pip install --upgrade pip
                  pip install poetry cookiecutter

            - name: Generate package
              run: |
                  cookiecutter . --overwrite-if-exists --no-input

            - name: Install python packages (in the package directory)
              working-directory: package_boilerplate
              run: |
                  poetry install --no-interaction

            - name: Run tests (in the package directory)
              working-directory: package_boilerplate
              run: |
                  poetry run pytest
